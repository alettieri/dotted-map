<?php
	
	error_reporting(E_ALL);
	
	
	class DottedMap {
		
		public $created_countries;
		//
		// Patterns generated by AI
		//
		private $patterns;
		//
		// How we want to replace them.
		//
		private $replace;
		
		
		public function __construct() {
			
			$this->patterns = array('/_[0-9]_/', '/_x2c_/', '/_x27_/');
			$this->replace = array( '', '', '_' );
			$this->created_countries = "";

		}

		private function _parse_id( $id ) {
			return preg_replace( $this->patterns, $this->replace, strtolower( $id ) );
		}

		private function _append_country ( $id ) {
			$this->created_countries .= $id . "\n";
		}

		public function parse_xml($xml, $node){
			
			$paths = array();
			$group = array();
			$count = 0;
			$group_id = $count;
			$path;
			$countryPoints = array();
			
			foreach( $xml->children() as $region )
			{

				if( ( $region->getName() == "g" ) && ( $region->count() > 0 ) )
				{

	    
	              foreach( $region->children() as $country )
	                {
	                    
	                   if( $country->getName() == "g" && ( $country->count() > 0 ) )
						{
	                    	//
	                    	// Clenup the id for our json
	                    	//
	                    	$country_id = $this->_parse_id( $country[ "id" ] );
	                    	//
	                    	// Append the generated country
	                    	//
	                    	$this->_append_country( $country_id );

	                    	if( $country->path )
	                    		$paths[ $country_id ][ "path" ] = array( "d" => $country->path["d"] );
	                    
	                	}
						
					
				    }//end foreach $region    
			    }
	       
		   }
		   	
		   return json_encode( $paths );
		}
	}
	
	$dm = new DottedMap();
	
	$xml = simplexml_load_file( "dotted-map.svg" );
	
	$assoc = $dm->parse_xml( $xml, "root" );

	$jsonData = "var country_paths = {$assoc};";
	$pathData = fopen( "map-path-data.js", "w" );
	fwrite( $pathData, $jsonData );
	fclose( $pathData );
	
	$countrData = fopen( "countries.txt", "w" );
	fwrite( $countrData, $dm->created_countries );
	fclose( $countryData );


?>
